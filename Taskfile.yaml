version: '3'

vars:
  VAULT_EXPORT_DIR: "/Users/alix/Library/Mobile\ Documents/iCloud~md~obsidian/Documents/vault-exports/pub-docs"
  GREEN_MACHINE_DIR: "/home/kube/repos/md-to-html/"


tasks:

  cp-vault-to-build:
    cmds:
      - |
        ssh green-machine.ts rm -rf /home/kube/repos/md-to-html/exports
        scp -r "{{.VAULT_EXPORT_DIR}}" green-machine.ts:/home/kube/repos/md-to-html/new_docs
        ssh green-machine.ts mv /home/kube/repos/md-to-html/new_docs /home/kube/repos/md-to-html/exports
        scp version.txt green-machine.ts:/home/kube/repos/md-to-html/

  cp-src-to-build:
    desc: "Copies Source and Taskfile to build box"
    cmds:
      - |
        # scp -r /Users/alix/Programming/repos/md-to-html/src green-machine.ts:/home/kube/repos/md-to-html/
        # scp -r templates green-machine.ts:/home/kube/repos/md-to-html/templates
        scp -r Taskfile.yaml green-machine.ts:/home/kube/repos/md-to-html/

  dev-deploy:
    cmds:
      - |
        cd kubernetes-manifests/envs/dev
        kustomize build . | kubectl apply -n docs-dev -f -

  dev-cp:
    cmds:
      - |
        # python3 src/convert.py
        POD=$(kubectl get pods -n docs-dev  -l app=md-to-html --no-headers --field-selector=status.phase=Running | cut -d' ' -f1)
        echo $POD
        kubectl cp -n docs-dev  exports/ ${POD}:/usr/share/nginx/exports
        kubectl exec -n docs-dev -it ${POD} -- rm -rf /usr/share/nginx/html
        kubectl exec -n docs-dev -it ${POD} -- mv /usr/share/nginx/exports /usr/share/nginx/html
      - echo "Copied and Built!"
      - open https://docs-dev.alix.lol
    silent: True

  update-kustomize-tag:
    cmds:
      - |
        new_tag=$(cat version.txt)
        # Check if a new tag value was provided
        if [ -z "$new_tag" ]; then
          echo "Error: Please provide a new tag value as an argument to the script."
          exit 1
        fi
        sed -i -e "s/newTag:.*/newTag: ${new_tag}/g" kubernetes-manifests/envs/prod/kustomization.yaml
        echo "Kustomization file updated with new tag: $new_tag"

  update-version-tag:
    cmds:
     - |
        python3 src/semver.py

  export-clean:
    cmds:
      - |
        rm -rf ./exports/*

  deploy:
    cmds:
      - task update-version-tag
      - task update-kustomize-tag
      - task cp-vault-to-build
      - task cp-src-to-build
      - ssh green-machine.ts 'cd /home/kube/repos/md-to-html/; task image-run;'
      - task prod-deploy

  dev-exec:
    cmds:
     - |
        POD=$(kubectl get pods -n docs-dev  -l app=md-to-html --no-headers --field-selector=status.phase=Running | cut -d' ' -f1)
        echo $POD
        kubectl exec -n docs-dev -it ${POD} -- bash
  prod-exec:
    cmds:
     - |
        POD=$(kubectl get pods -n docs  -l app=md-to-html --no-headers --field-selector=status.phase=Running | cut -d' ' -f1)
        echo $POD
        kubectl exec -n docs -it ${POD} -- bash

  prod-deploy:
    cmds:
      - |
        cd kubernetes-manifests/envs/prod
        kustomize build . | kubectl apply -n docs -f -
        kubectl get pods -n docs
        sleep 5
        open https://docs.alix.lol/databases/postgres.html

  convert:
    cmds:
      - |
        cd src/
        python3 convert.py

  image-build:
    cmds:
      - |
        rm -rf docker/content
        cp -r ./exports docker/content
        cd  docker
        VERSION="$(cat {{.GREEN_MACHINE_DIR}}/version.txt)"
        docker build . -t md-to-html:${VERSION}

  image-push:
    cmds:
      - |
        VERSION="$(cat {{.GREEN_MACHINE_DIR}}/version.txt)"
        docker tag md-to-html:$VERSION harbor.squid-ink.us/politeauthority/md-to-html:${VERSION}
        docker push harbor.squid-ink.us/politeauthority/md-to-html:${VERSION}

  image-run:
    cmds:
    - task: image-build
    - task: image-push

